

from pwn import *
from time import sleep
import os
import sys
context.terminal = ["deepin-terminal", "-x", "sh", "-c"]

binary = 
elf = ELF(binary)
if sys.argv[1] == "l":
    context.log_level = "debug"
    # env = {'LD_PRELOAD': ''}
    # io = process("", env = env)
    io = process(binary)
    libc = elf.libc

else:
    remoteAddr = ""
    remotePort = 
    io = remote(remoteAddr, remotePort)
    libc = ELF("")

success = lambda name, value: log.success("{} -> {:#x}".format(name, value))

def DEBUG(bps = [], pie = False):
    if pie:
        base = int(os.popen("pmap {}| awk '{{print $1}}'".format(pidof(io)[0])).readlines()[1], 16)
        cmd = ''.join(['b *{:#x}\n'.format(b + base) for b in bps])
    else:
        cmd = ''.join(['b *{:#x}\n'.format(b) for b in bps])

    if bps != []:
        cmd += "c"

    raw_input("DEBUG: ")
    gdb.attach(io, cmd)

if __name__ == "__main__":
    
    io.interactive()
    io.close()
